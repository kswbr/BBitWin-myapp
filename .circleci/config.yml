# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-apache-node-browsers
    working_directory: ~/myapp
    steps:
      - checkout
      - setup_remote_docker
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "src/composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
          paths:
              - ./src/vendor

      - run: cd src && composer install -n --prefer-dist
      - save_cache:
          paths:
            - ./src/vendor
          key: v1-dependencies-{{ checksum "src/composer.json" }}
      - run: sudo apt-get update
      - run: sudo apt-get install libpng-dev
      - restore_cache:
          keys:
          - v1-node_modules-{{ checksum "src/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-node_modules-
          paths:
            - ./src/node_modules
      - run: cd src && npm install
      - save_cache:
          paths:
            - ./src/node_modules
          key: v1-node_modules-{{ checksum "src/package.json" }}
      - run: cd src && npm run prod
      - run:
          command: |
            mkdir -p ~/caches
      - persist_to_workspace:
          root: ~/myapp
          paths:
            - src/public
  push:
    docker:
      - image: google/cloud-sdk:171.0.0-alpine
    working_directory: ~/myapp
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/myapp
      - run:
          name: Install dependencies
          command: |
            gcloud components install kubectl
      - run: apk add --no-cache rsync
      - run: rsync -av --delete src dist --exclude="test_site" --exclude="node_modules" --exclude="storage"
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.05.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Check docker version
          command: |
            docker version
      - run: ./build.sh ${PROJECT_NAME}
      - deploy:
          name: Deploy application Docker image
          command: |
            echo $ACCT_AUTH | base64 -d > ${HOME}/account-auth.json
            gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
            gcloud config set project $PROJECT_NAME
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            gcloud config set container/use_client_certificate True
            ./push.sh
workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - push:
          requires:
            - build
          # filters:
          #   branches:
          #     only: master
